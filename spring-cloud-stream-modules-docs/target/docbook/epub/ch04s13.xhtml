<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>TCP Sink</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch04s12.xhtml" title="Dynamic Router (router)"/><link rel="next" href="pt03.xhtml" title="Part III. Appendices"/></head><body><header/><section class="section" title="TCP Sink" epub:type="subchapter" id="spring-cloud-stream-modules-sink-tcp"><div class="titlepage"><div><div><h2 class="title" style="clear: both">TCP Sink</h2></div></div></div><p>The TCP Sink provides for outbound messaging over TCP; messages sent to the sink can have <code class="literal">String</code> or <code class="literal">byte[]</code> payloads.</p><p>TCP is a streaming protocol and some mechanism is needed to frame messages on the wire. A number of encoders are
available, the default being 'CRLF'.</p><section class="section" title="Options" epub:type="division" id="_options_26"><div class="titlepage"><div><div><h3 class="title">Options</h3></div></div></div><p>The <span class="strong"><strong>tcp</strong></span> sink has the following options:</p><div class="variablelist" epub:type="list"><dl class="variablelist"><dt><span class="term">charset</span></dt><dd>the charset used when converting from String to bytes <span class="strong"><strong>(String, default: <code class="literal">UTF-8</code>)</strong></span></dd><dt><span class="term">close</span></dt><dd>whether to close the socket after each message <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd><dt><span class="term">encoder</span></dt><dd>the encoder to use when sending messages <span class="strong"><strong>(Encoding, default: <code class="literal">CRLF</code>, possible values: <code class="literal">CRLF,LF,NULL,STXETX,RAW,L1,L2,L4</code>)</strong></span></dd><dt><span class="term">host</span></dt><dd>the remote host to connect to <span class="strong"><strong>(String, default: <code class="literal">localhost</code>)</strong></span></dd><dt><span class="term">nio</span></dt><dd>whether or not to use NIO <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd><dt><span class="term">port</span></dt><dd>the port on the remote host to connect to <span class="strong"><strong>(int, default: <code class="literal">1234</code>)</strong></span></dd><dt><span class="term">reverseLookup</span></dt><dd>perform a reverse DNS lookup on the remote IP Address <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd><dt><span class="term">socketTimeout</span></dt><dd>the timeout (ms) before closing the socket when no data is received <span class="strong"><strong>(int, default: <code class="literal">120000</code>)</strong></span></dd><dt><span class="term">useDirectBuffers</span></dt><dd>whether or not to use direct buffers <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd></dl></div></section><section class="section" title="Available Encoders" epub:type="division" id="_available_encoders"><div class="titlepage"><div><div><h3 class="title">Available Encoders</h3></div></div></div><div class="variablelist" title="Text Data" epub:type="list"><div class="variablelist-title">Text Data</div><dl class="variablelist"><dt><span class="term">CRLF (default)</span></dt><dd>text terminated by carriage return (0x0d) followed by line feed (0x0a)</dd><dt><span class="term">LF</span></dt><dd>text terminated by line feed (0x0a)</dd><dt><span class="term">NULL</span></dt><dd>text terminated by a null byte (0x00)</dd><dt><span class="term">STXETX</span></dt><dd>text preceded by an STX (0x02) and terminated by an ETX (0x03)</dd></dl></div><div class="variablelist" title="Text and Binary Data" epub:type="list"><div class="variablelist-title">Text and Binary Data</div><dl class="variablelist"><dt><span class="term">RAW</span></dt><dd>no structure - the client indicates a complete message by closing the socket</dd><dt><span class="term">L1</span></dt><dd>data preceded by a one byte (unsigned) length field (supports up to 255 bytes)</dd><dt><span class="term">L2</span></dt><dd>data preceded by a two byte (unsigned) length field (up to 2<sup>16</sup>-1 bytes)</dd><dt><span class="term">L4</span></dt><dd>data preceded by a four byte (signed) length field (up to 2<sup>31</sup>-1 bytes)</dd></dl></div></section></section><footer/></body></html>