<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>RabbitMQ</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch02s06.xhtml" title="Load Generator (load-generator)"/><link rel="next" href="ch02s08.xhtml" title="SFTP (sftp)"/></head><body><header/><section class="section" title="RabbitMQ" epub:type="subchapter" id="spring-cloud-stream-modules-source-rabbit"><div class="titlepage"><div><div><h2 class="title" style="clear: both">RabbitMQ</h2></div></div></div><p>The "rabbit" source enables receiving messages from RabbitMQ.</p><p>The queue(s) must exist before the stream is deployed; they are not created automatically.
You can easily create a Queue using the RabbitMQ web UI.</p><section class="section" title="Options" epub:type="division" id="_options_7"><div class="titlepage"><div><div><h3 class="title">Options</h3></div></div></div><p>The <span class="strong"><strong>rabbit</strong></span> source has the following options:</p><div class="variablelist" epub:type="list"><dl class="variablelist"><dt><span class="term">enableRetry</span></dt><dd>enable retry; when retries are exhausted the message will be rejected; message disposition will depend on dead letter configuration <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd><dt><span class="term">initialRetryInterval</span></dt><dd>initial interval between retries <span class="strong"><strong>(int, default: <code class="literal">1000</code>)</strong></span></dd><dt><span class="term">mappedRequestHeaders</span></dt><dd>request message header names to be mapped from the incoming message <span class="strong"><strong>(String, default: <code class="literal">STANDARD_REQUEST_HEADERS</code>)</strong></span></dd><dt><span class="term">maxAttempts</span></dt><dd>maximum delivery attempts <span class="strong"><strong>(int, default: <code class="literal">3</code>)</strong></span></dd><dt><span class="term">maxConcurrency</span></dt><dd>the maximum number of consumers <span class="strong"><strong>(int, default: <code class="literal">1</code>)</strong></span></dd><dt><span class="term">maxRetryInterval</span></dt><dd>maximum retry interval <span class="strong"><strong>(int, default: <code class="literal">30000</code>)</strong></span></dd><dt><span class="term">queues</span></dt><dd>the queue(s) from which messages will be received <span class="strong"><strong>(String, default: no default)</strong></span></dd><dt><span class="term">requeue</span></dt><dd>whether rejected messages will be requeued by default <span class="strong"><strong>(boolean, default: <code class="literal">true</code>)</strong></span></dd><dt><span class="term">retryMultiplier</span></dt><dd>retry interval multiplier <span class="strong"><strong>(double, default: <code class="literal">2.0</code>)</strong></span></dd><dt><span class="term">transacted</span></dt><dd>true if the channel is to be transacted <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd></dl></div><p>Also see the <a class="link" href="http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html" target="_top">Spring Boot Documentation</a>
for addition properties for the broker connections and listener properties.</p></section><section class="section" title="A Note About Retry" epub:type="division" id="rabbitSourceRetry"><div class="titlepage"><div><div><h3 class="title">A Note About Retry</h3></div></div></div><div class="note" title="Note" epub:type="notice"><h3 class="title">Note</h3><p>With the default <span class="emphasis"><em>ackMode</em></span> (<span class="strong"><strong>AUTO</strong></span>) and <span class="emphasis"><em>requeue</em></span> (<span class="strong"><strong>true</strong></span>) options, failed message deliveries will be retried
indefinitely.
Since there is not much processing in the rabbit source, the risk of failure in the source itself is small, unless
the downstream <code class="literal">Binder</code> is not connected for some reason.
Setting <span class="emphasis"><em>requeue</em></span> to <span class="strong"><strong>false</strong></span> will cause messages to be rejected on the first attempt (and possibly sent to a Dead Letter
Exchange/Queue if the broker is so configured).
The <span class="emphasis"><em>enableRetry</em></span> option allows configuration of retry parameters such that a failed message delivery can be retried and
eventually discarded (or dead-lettered) when retries are exhausted.
The delivery thread is suspended during the retry interval(s).
Retry options are <span class="emphasis"><em>enableRetry</em></span>, <span class="emphasis"><em>maxAttempts</em></span>, <span class="emphasis"><em>initialRetryInterval</em></span>, <span class="emphasis"><em>retryMultiplier</em></span>, and <span class="emphasis"><em>maxRetryInterval</em></span>.
Message deliveries failing with a <span class="emphasis"><em>MessageConversionException</em></span> are never retried; the assumption being that if a message
could not be converted on the first attempt, subsequent attempts will also fail.
Such messages are discarded (or dead-lettered).</p></div></section></section><footer/></body></html>