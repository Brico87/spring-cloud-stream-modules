<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>RabbitMQ</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch04s09.xhtml" title="Log (log)"/><link rel="next" href="ch04s11.xhtml" title="Redis (redis)"/></head><body><header/><section class="section" title="RabbitMQ" epub:type="subchapter" id="spring-cloud-stream-modules-sink-rabbitmq"><div class="titlepage"><div><div><h2 class="title" style="clear: both">RabbitMQ</h2></div></div></div><p>The "rabbit" sink enables outbound messaging over RabbitMQ.</p><section class="section" title="Options" epub:type="division" id="_options_23"><div class="titlepage"><div><div><h3 class="title">Options</h3></div></div></div><p>The <span class="strong"><strong>rabbit</strong></span> sink has the following options:</p><p>(See the Spring Boot documentation for RabbitMQ connection properties)</p><div class="variablelist" epub:type="list"><dl class="variablelist"><dt><span class="term">converterBeanName</span></dt><dd>the bean name of the message converter <span class="strong"><strong>(String, default: none)</strong></span></dd><dt><span class="term">persistentDeliveryMode</span></dt><dd>the default delivery mode, true for persistent <span class="strong"><strong>(boolean, default: <code class="literal">false</code>)</strong></span></dd><dt><span class="term">exchange</span></dt><dd>the Exchange on the RabbitMQ broker to which messages should be sent <span class="strong"><strong>(String, default: <code class="literal">""</code>)</strong></span></dd><dt><span class="term">exchangeExpression</span></dt><dd>a SpEL expression that evaluates to the Exchange on the RabbitMQ broker to which messages
should be sent; overrides `exchange` <span class="strong"><strong>(String, default: ``)</strong></span></dd><dt><span class="term">mappedRequestHeaders</span></dt><dd>request message header names to be propagated to RabbitMQ, to limit to the set of standard headers plus `bar`, use `STANDARD_REQUEST_HEADERS,bar` <span class="strong"><strong>(String, default: <code class="literal">*</code>)</strong></span></dd><dt><span class="term">routingKey</span></dt><dd>the routing key to be passed with the message, as a SpEL expression <span class="strong"><strong>(String, default: none)</strong></span></dd><dt><span class="term">routingKeyExpression</span></dt><dd>an expression that evaluates to the routing key to be passed with the message, as a SpEL expression; overrides `routingKey` <span class="strong"><strong>(String, default: none)</strong></span></dd></dl></div><div class="note" title="Note" epub:type="notice"><h3 class="title">Note</h3><p>By default, the message converter is a <code class="literal">SimpleMessageConverter</code> which handles <code class="literal">byte[]</code>, <code class="literal">String</code> and
<code class="literal">java.io.Serializable</code>.
A well-known bean name <code class="literal">jsonConverter</code> will configure a <code class="literal">Jackson2JsonMessageConverter</code> instead.
In addition, a custom converter bean can be added to the context and referenced by the converterBeanName property.</p></div></section></section><footer/></body></html>