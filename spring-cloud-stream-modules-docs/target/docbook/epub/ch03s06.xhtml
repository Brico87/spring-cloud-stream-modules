<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>Transform (transform)</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch03s05.xhtml" title="Groovy Transform (groovy-transform)"/><link rel="next" href="ch03s07.xhtml" title="Splitter"/></head><body><header/><section class="section" title="Transform (transform)" epub:type="subchapter" id="spring-cloud-stream-modules-transform"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Transform (<code class="literal">transform</code>)</h2></div></div></div><p>Use the transform module in a stream to convert a Messageâ€™s content or structure.</p><section class="section" title="Options" epub:type="division" id="_options_16"><div class="titlepage"><div><div><h3 class="title">Options</h3></div></div></div><p>The <span class="strong"><strong>transform</strong></span> processor has the following options:</p><div class="variablelist" epub:type="list"><dl class="variablelist"><dt><span class="term">expression</span></dt><dd>a SpEL expression used to transform messages <span class="strong"><strong>(String, default: <code class="literal">payload.toString()</code>)</strong></span></dd></dl></div></section><section class="section" title="Transform with SpEL expression" epub:type="division" id="_transform_with_spel_expression"><div class="titlepage"><div><div><h3 class="title">Transform with SpEL expression</h3></div></div></div><p>The simplest way to use the transform processor is to pass a SpEL expression when creating the stream. The expression should return the modified message or payload.  For example:</p><pre class="literallayout">dataflow:&gt; stream create --name transformtest --definition "http --server.port=9003 | transform --expression=payload.toUpperCase() | log" --deploy</pre><p>This transform will convert all message payloads to upper case. If sending the word "foo" to the HTTP endpoint and you should see "FOO" in the Spring Cloud Data Flow logs:</p><pre class="literallayout">dataflow:&gt; http post --target http://localhost:9003 --data "foo"</pre><p>As part of the SpEL expression you can make use of the pre-registered JSON Path function.  The syntax is #jsonPath(payload,'&lt;json path expression&gt;')</p></section></section><footer/></body></html>