<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>Chapter 3. Processors</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch02s12.xhtml" title="Twitter Stream (twitterstream)"/><link rel="next" href="ch03s02.xhtml" title="Groovy Filter (groovy-filter)"/></head><body><header/><section class="chapter" title="Chapter 3. Processors" epub:type="chapter" id="spring-cloud-stream-modules-processors"><div class="titlepage"><div><div><h2 class="title">Chapter 3. Processors</h2></div></div></div><section class="section" title="Filter (filter)" epub:type="subchapter" id="spring-cloud-stream-modules-filter"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Filter (<code class="literal">filter</code>)</h2></div></div></div><p>Use the filter module in a stream to determine whether a Message should be passed to the output channel.</p><p>The <span class="strong"><strong>filter</strong></span> processor has the following options:</p><div class="variablelist" epub:type="list"><dl class="variablelist"><dt><span class="term">expression</span></dt><dd>a SpEL expression used to transform messages <span class="strong"><strong>(String, default: <code class="literal">payload.toString()</code>)</strong></span></dd></dl></div><section class="section" title="Filter with SpEL expression" epub:type="division" id="_filter_with_spel_expression"><div class="titlepage"><div><div><h3 class="title">Filter with SpEL expression</h3></div></div></div><p>The simplest way to use the filter processor is to pass a SpEL expression when creating the stream. The expression should evaluate the message and return true or false.  For example:</p><pre class="literallayout">dataflow:&gt; stream create --name filtertest --definition "http --server.port=9000 | filter --expression=payload=='good' | log" --deploy</pre><p>This filter will only pass Messages to the log sink if the payload is the word "good". Try sending "good" to the HTTP endpoint and you should see it in the Spring Cloud Data Flow logs:</p><pre class="literallayout">dataflow:&gt; http post --target http://localhost:9000 --data "good"</pre><p>Alternatively, if you send the word "bad" (or anything else), you shouldn’t see the log entry.</p></section></section></section><footer/></body></html>